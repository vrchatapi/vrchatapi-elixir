diff --git a/lib/vrchat/connection.ex b/lib/vrchat/connection.ex
index 1b102eb..80e59e2 100644
--- a/lib/vrchat/connection.ex
+++ b/lib/vrchat/connection.ex
@@ -23,7 +23,6 @@ defmodule VRChat.Connection do
                       "https://api.vrchat.cloud/api/1"
                     )
 
-
   @typedoc """
   The list of options that can be passed to new/1.
 
@@ -37,6 +36,8 @@ defmodule VRChat.Connection do
           {:user_agent, String.t()},
           {:username, String.t() | nil},
           {:password, String.t() | nil},
+          {:totp_secret, String.t() | nil},
+          {:cookies, [{String.t(), String.t()}] | nil}
         ]
 
   @doc "Forward requests to Tesla."
@@ -87,8 +88,7 @@ defmodule VRChat.Connection do
 
   Tesla.Env.client
   """
-  @spec new(String.t(), String.t()), options) :: Tesla.Env.client()
-
+  @spec new(String.t(), String.t(), options) :: Tesla.Env.client()
 
   def new(username, password, options) when is_binary(username) and is_binary(password) do
     options
@@ -125,6 +125,8 @@ defmodule VRChat.Connection do
 
     username = Keyword.get(options, :username)
     password = Keyword.get(options, :password)
+    totp_secret = Keyword.get(options, :totp_secret)
+
     middleware =
       if username || password do
         [{Tesla.Middleware.BasicAuth, %{username: username, password: password}} | middleware]
@@ -132,17 +134,25 @@ defmodule VRChat.Connection do
         middleware
       end
 
+    cookies = VRChat.Middleware.stringify_cookies(
+      Keyword.get(options, :cookies, []) ++ [{"apiKey", "JlE5Jldo5Jibnk5O5hTx6XVqsJu4WJ26"}]
+    )
 
+    headers = [
+      {"user-agent", user_agent},
+      {"cookie", cookies}
+    ]
 
     [
+      #{Tesla.Middleware.Logger, []},
       {Tesla.Middleware.BaseUrl, base_url},
-      {Tesla.Middleware.Headers, [{"user-agent", user_agent}]},
-      {Tesla.Middleware.EncodeJson, engine: json_engine}
+      {Tesla.Middleware.Headers, headers},
+      {Tesla.Middleware.EncodeJson, engine: json_engine},
+      {VRChat.Middleware, totp_secret: totp_secret}
       | middleware
     ]
   end
 
-
   @doc """
   Returns the default adapter for this API.
   """
